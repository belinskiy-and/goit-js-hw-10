{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAcC,SAASC,cAAc,SAErCC,EAAW,GAmCjBH,EAAYI,iBAAiB,UAnBV,SAAAC,qBAKfC,YAAW,WAjBf,IAAuBC,EAAUC,GAAVD,EAkBHE,EAAI,EAlBSD,EAkBNE,EAAYD,EAAIE,OAAOR,EAASS,MAjBlD,IAAIC,SAAS,SAACC,EAASC,GACNC,KAAKC,SAAW,GAEpCH,EAAS,uBAAuCI,OAAfX,EAAS,QAAYW,OAANV,EAAM,OAEpDO,EAAM,sBAAoCG,OAAfX,EAAS,QAAYW,OAANV,EAAM,WAajDW,MAAK,SAAAC,UAAWC,EAAAvB,GAASwB,OAAOC,QAAQH,MACxCI,OAAM,SAAAC,UAASJ,EAAAvB,GAASwB,OAAOI,QAAQD,QACvCf,EAAYD,EAAIE,OAAOR,EAASS,QARrCP,EAAMsB,iBAGN,IADA,IAAIjB,EAAYC,OAAOR,EAASK,OACvBC,EAAI,EAAGA,EAAIN,EAASyB,OAAQnB,GAAK,EAACoB,EAAApB,MAgB7CT,EAAYI,iBAAiB,SAP7B,SAAmBC,GACjBF,EAASE,EAAMyB,OAAOC,MAAQ1B,EAAMyB,OAAOE","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formElement = document.querySelector(\".form\");\n\nconst formData = {};\n\n//----------------------------------\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  })\n  \n}\n\nconst formSubmit = event => {\n  event.preventDefault();\n\n  let delayTime = Number(formData.delay);\n  for (let i = 0; i < formData.amount; i += 1) {\n    setTimeout(() => {\n      createPromise(i + 1, delayTime + i * Number(formData.step))\n      .then(message => Notiflix.Notify.success(message))\n      .catch(error => Notiflix.Notify.failure(error));\n    }, delayTime + i * Number(formData.step));\n  }\n}\n\nfunction formInput(event) {\n  formData[event.target.name] = event.target.value;\n}\n\n//----------------------------------\n\nformElement.addEventListener('submit', formSubmit);\nformElement.addEventListener('input', formInput);"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formElement","document","querySelector","$ce04d3a99e08e73b$var$formData","addEventListener","event","setTimeout","position","delay","i","delayTime","Number","step","Promise","resolve","reject","Math","random","concat","then","message","$parcel$interopDefault","Notify","success","catch","error","failure","preventDefault","amount","_loop","target","name","value"],"version":3,"file":"03-promises.914dc558.js.map"}